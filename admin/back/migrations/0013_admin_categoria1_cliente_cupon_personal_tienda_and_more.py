# Generated by Django 4.1.4 on 2023-02-25 01:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('back', '0012_alter_producto_imagen'),
    ]

    operations = [
        migrations.CreateModel(
            name='admin',
            fields=[
                ('adm_email', models.EmailField(max_length=32, primary_key=True, serialize=False)),
                ('adm_password', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'ordering': ['adm_email'],
            },
        ),
        migrations.CreateModel(
            name='categoria1',
            fields=[
                ('cat_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Nro identificador categoria')),
                ('cat_nombre', models.CharField(max_length=30, verbose_name='Nombre categoria')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['cat_id'],
            },
        ),
        migrations.CreateModel(
            name='cliente',
            fields=[
                ('cli_email', models.EmailField(max_length=30, primary_key=True, serialize=False, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido')], verbose_name='Email cliente')),
                ('cli_password', models.CharField(default='default_value', max_length=32, verbose_name='Contraseña')),
                ('cli_nombre', models.CharField(default='default_value', max_length=30, verbose_name='Nombre cliente')),
                ('cli_apellido', models.CharField(default='default_value', max_length=30, verbose_name='Apellido cliente')),
                ('cli_direccion_entrega', models.CharField(default='Dirección sin definir', max_length=40, verbose_name='Dirección entrega cliente')),
                ('cli_donador', models.BooleanField(default=False, verbose_name='Donador')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['cli_email'],
            },
        ),
        migrations.CreateModel(
            name='cupon',
            fields=[
                ('cup_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Identificador cupon')),
                ('cup_nombre', models.CharField(max_length=10, verbose_name='Nombre cupon')),
                ('cup_desc', models.CharField(max_length=30, verbose_name='Descripción cupon')),
                ('cup_categoria', models.CharField(max_length=30, verbose_name='Categoria cupon')),
                ('cup_fecha_inicio', models.DateField(verbose_name='Fecha inicio cupon')),
                ('cup_fecha_termino', models.DateField(verbose_name='Fecha termino cupon')),
                ('cup_porc_desc', models.IntegerField(default=0, help_text='Solo ingresar números', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje de descuento')),
                ('cup_stock', models.IntegerField(default=0, verbose_name='Nro de cupones disponibles')),
            ],
            options={
                'verbose_name': 'Cupon',
                'verbose_name_plural': 'Cupones',
                'ordering': ['cup_id'],
            },
        ),
        migrations.CreateModel(
            name='personal_tienda',
            fields=[
                ('per_email', models.EmailField(max_length=30, primary_key=True, serialize=False, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido')], verbose_name='Email cliente')),
                ('per_password', models.CharField(max_length=32, verbose_name='Contraseña')),
                ('per_nombre', models.CharField(default='default_value', max_length=30, verbose_name='Nombre cliente')),
                ('per_apellido', models.CharField(default='default_value', max_length=30, verbose_name='Apellido cliente')),
                ('per_ciudad_residencia', models.CharField(default='Ciudad sin definir', max_length=40, verbose_name='Ciudad de residencia')),
                ('per_comuna_residencia', models.CharField(default='Comuna sin definir', max_length=40, verbose_name='Comuna de residencia')),
                ('per_run', models.IntegerField(verbose_name='Run personal')),
                ('per_dvrun', models.CharField(max_length=1, verbose_name='Digito verificador')),
            ],
            options={
                'verbose_name': 'Personal',
                'verbose_name_plural': 'Empleados',
                'ordering': ['per_email'],
            },
        ),
        migrations.CreateModel(
            name='test_categoria',
            fields=[
                ('cat_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Nro identificador categoria')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['cat_id'],
            },
        ),
        migrations.CreateModel(
            name='producto1',
            fields=[
                ('prod_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Nro identificador producto')),
                ('prod_marca', models.CharField(max_length=30, verbose_name='Marca producto')),
                ('prod_modelo', models.CharField(max_length=30, verbose_name='Modelo producto')),
                ('prod_precio', models.IntegerField(verbose_name='Precio producto')),
                ('prod_descripcion', models.CharField(default='Descripción producto', max_length=50, verbose_name='Descripción producto')),
                ('prod_stock', models.IntegerField(default=0, verbose_name='Stock producto')),
                ('prod_imagen', models.CharField(default='Sin_imagen', max_length=100, verbose_name='Nombre imagen producto')),
                ('cat_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back.categoria', verbose_name='Nro id categoria')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['prod_id'],
            },
        ),
        migrations.CreateModel(
            name='pedido',
            fields=[
                ('id_pedido', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='Nro identificador pedido')),
                ('fecha_pedido', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Fecha pedido')),
                ('total_pedido', models.IntegerField(default=0, verbose_name='Valor total del pedido')),
                ('direccion_entrega', models.CharField(max_length=30, verbose_name='Dirección entrega pedido')),
                ('estado', models.CharField(default='Procesando', max_length=15, verbose_name='Estado pedido')),
                ('cli_email', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back.cliente', verbose_name='Email cliente')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['id_pedido'],
            },
        ),
        migrations.CreateModel(
            name='item_compra',
            fields=[
                ('item_id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='Nro identificador item compra')),
                ('item_cantidad', models.IntegerField(verbose_name='Cantidad de item de compra')),
                ('item_precio_unitario', models.IntegerField(verbose_name='Precio unitario del item')),
                ('total_item', models.IntegerField(verbose_name='Total item')),
                ('id_pedido', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back.pedido', verbose_name='Nro identificador pedido')),
                ('prod_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back.producto', verbose_name='Nro identificador producto')),
            ],
            options={
                'verbose_name': 'Item compra',
                'verbose_name_plural': 'Items compra',
                'ordering': ['item_id'],
            },
        ),
        migrations.CreateModel(
            name='cupon_usado',
            fields=[
                ('cu_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Nro ID cupon usado')),
                ('cu_cantidad_desc_compra', models.IntegerField(default=0, verbose_name='Valor del descuento aplicado')),
                ('cu_fecha_canje', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Fecha canje')),
                ('cli_email', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back.cliente', verbose_name='Cliente canje')),
                ('cu_nombre_cupon', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back.cupon', verbose_name='Nombre cupon canjeado')),
            ],
            options={
                'verbose_name': 'Cupon usado',
                'verbose_name_plural': 'Cupones usados',
                'ordering': ['cu_id'],
            },
        ),
    ]
